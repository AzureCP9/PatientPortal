// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientPortal.Infrastructure.Common.Persistence;

#nullable disable

namespace PatientPortal.Infrastructure.Common.Persistence.Migrations
{
    [DbContext(typeof(PatientPortalDbContext))]
    [Migration("20250808161751_AddConvenienceConsultationScheduleEnd")]
    partial class AddConvenienceConsultationScheduleEnd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientPortal.Persistence.Abstractions.Consultations.ConsultationDbEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ScheduleCancellationReason")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Schedule_CancellationReason");

                    b.Property<DateTimeOffset?>("ScheduleCancelledAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Schedule_CancelledAt");

                    b.Property<TimeSpan>("ScheduleDuration")
                        .HasColumnType("time")
                        .HasColumnName("Schedule_Duration");

                    b.Property<DateTimeOffset>("ScheduleEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Schedule_End");

                    b.Property<DateTimeOffset>("ScheduleStart")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Schedule_Start");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Consultations");
                });

            modelBuilder.Entity("PatientPortal.Persistence.Abstractions.Patients.PatientDbEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PatientPortal.Persistence.Abstractions.Patients.PatientDbEntity.Name#PersonName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)");

                            b1.Property<string>("MiddleNames")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientPortal.Persistence.Abstractions.Consultations.ConsultationDbEntity", b =>
                {
                    b.HasOne("PatientPortal.Persistence.Abstractions.Patients.PatientDbEntity", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("PatientPortal.Persistence.Abstractions.Consultations.ConsultationAttachmentDbRepresentation", "Attachments", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Uri")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("ConsultationId");

                            b1.ToTable("ConsultationAttachments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.Navigation("Attachments");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
